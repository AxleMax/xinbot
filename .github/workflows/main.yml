name: Build and Release EXE

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build EXE and Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node_version: [18]
        include:
          - os: ubuntu-latest
            suffix: linux
            ext: tar.gz
          - os: windows-latest
            suffix: win
            ext: exe

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - run: npm install

      - run: npm install -g pkg

      - name: Build Executable
        run: |
          OUTPUT_DIR="build"
          mkdir -p $OUTPUT_DIR
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            pkg . --targets node18-win-x64 --output $OUTPUT_DIR/xinbot.exe
          else
            pkg . --targets node18-linux-x64 --output $OUTPUT_DIR/xinbot
          fi
        shell: bash

      - name: Compress Executable
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            # 调用 PowerShell 压缩
            pwsh -Command "Compress-Archive -Path 'build/xinbot.exe' -DestinationPath 'build/xinbot-win.zip'"
          else
            tar -czvf build/xinbot-linux.tar.gz -C build xinbot
          fi
        shell: bash
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: xinbot-${{ matrix.suffix }}
          path: build/xinbot-${{ matrix.suffix }}.${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/xinbot-win.*
            release/xinbot-linux.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
